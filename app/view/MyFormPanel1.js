/*
 * File: app/view/MyFormPanel1.js
 *
 * This file was generated by Sencha Designer version 2.0.0.
 * http://www.sencha.com/products/designer/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Designer does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RegCr.view.MyFormPanel1', {
    extend: 'Ext.form.Panel',

    config: {
        items: [
            {
                xtype: 'numberfield',
                id: 'numPac',
                label: 'Num',
                name: 'numPac'
            },
            {
                xtype: 'textfield',
                id: 'nomPac',
                label: 'nom'
            },
            {
                xtype: 'emailfield',
                id: 'emailPac',
                label: 'mail',
                placeHolder: 'email@example.com'
            },
            {
                xtype: 'togglefield',
                id: 'prestgl',
                label: 'pressio',
                value: 1
            },
            {
                xtype: 'togglefield',
                id: 'gluctgl',
                label: 'glucosa',
                value: 1
            },
            {
                xtype: 'button',
                itemId: 'mybutton',
                text: 'grabar'
            },
            {
                xtype: 'dataview',
                id: 'dataview',
                itemTpl: [
                    '<div>Data View Item {string}</div>'
                ],
                store: 'StLocUser'
            }
        ],
        listeners: [
            {
                fn: 'onMybuttonTap',
                event: 'tap',
                delegate: '#mybutton'
            }
        ]
    },

    onMybuttonTap: function(button, e, options) {
        var store = Ext.data.StoreManager.lookup('store.StLocUser');
        console.log(store);

        //*******************************************************
        // Priuebas varias, comentado para hacer reset de la 
        //funci√≥n...
        //*******************************************************

        /*
        var store = Ext.data.StoreManager.lookup('StLocUser');

        var num =  Ext.ComponentQuery.query('#numPac')[0].getValue();
        var nom = Ext.ComponentQuery.query('#nomPac')[0].getValue();
        var mail = Ext.ComponentQuery.query('#emailPac')[0].getValue();
        var prestgl = Ext.ComponentQuery.query('#prestgl')[0].getValue();
        var glutgl = Ext.ComponentQuery.query('#gluctgl')[0].getValue();

        //var user = Ext.create('RegCr.store.DadesUsuari', {id: num, nom: nom, email: mail, pressio: prestgl, glucosa: glutgl});
        //user.save();
        user.sync();


        //read data
        store.load();
        //get the first item
        var rows = store.getAt(0);
        //if not exists, build the first item (this area needs to be replaced with a function that construct a whole settings file
        console.log(rows);
        if (!rows) {
            //construct item's structure
            var user = Ext.ModelManager.getModel('RegCr.store.DadesUsuari');
            var item = new user ({
                id: num, nom: nom, email: mail, pressio: prestgl, glucosa: glutgl
            });
            //add new item to file
            store.add(item);
            //sync item
        }
        //set value in item
        //item.set('value', values.name);
        //sync items to file
        store.sync();*/

    }

});